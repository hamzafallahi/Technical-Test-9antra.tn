version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: 9antra_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - 9antra_network
    restart: unless-stopped

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: 9antra_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@9antra.tn
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - 9antra_network
    depends_on:
      - postgres
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: 9antra_backend
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${PORT}
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./server:/app/server
      - ./server/uploads:/app/server/uploads
      - node_modules:/app/node_modules
    networks:
      - 9antra_network
    depends_on:
      - postgres
    restart: unless-stopped
    command: npm run server

volumes:
  postgres_data:
  pgadmin_data:
  node_modules:

networks:
  9antra_network:
    driver: bridge
